apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-app
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node-app
  template:
    metadata:
      labels:
        app: node-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: node-app
        image: your-docker-repo/node-monitoring-app:latest
        ports:
        - containerPort: 3000
        env:
        - name: PORT
          value: "3000"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
        command: ["node", "-e", "console.log('Node.js app is running'); require('http').createServer((req, res) => { res.writeHead(200); res.end('Hello from Node.js!'); }).listen(3000);"]
---
apiVersion: v1
kind: Service
metadata:
  name: node-app-service
  namespace: microservices
  labels:
    app: node-app
spec:
  selector:
    app: node-app
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: ClusterIP
